/*
Language: Octave
Author: Andrew Janke <floss@apjanke.net>
Origin: matlab.js
Description: A FLOSS clone of Matlab
Website: https://octave.org
Category: scientific
*/

/*
  Formal syntax is incomplete, but published at:
  https://octave.org/doc/v6.1.0/Grammar-and-Parser.html
*/
export default function(hljs) {

  var TRANSPOSE_RE = '(\'|\\.\')+';
  var TRANSPOSE = {
    relevance: 0,
    contains: [
      { begin: TRANSPOSE_RE }
    ]
  };

  var MISSING_FUNCTIONS_LIST = [
    /* syntax */
    "arguments",
    /* functions */
    "addboundary",
    "addcats",
    "addCause",
    "addedge",
    "addmulti",
    "addnode",
    "addpoints",
    "addRequired",
    "addsample",
    "addsampletocollection",
    "addts",
    "adjacency",
    "align",
    "alim",
    "alpha",
    "alphamap",
    "alphaShape",
    "alphaSpectrum",
    "alphaTriangulation",
    "animatedline",
    "animatedLine",
    "append",
    "array2table",
    "array2timetable",
    "bar3",
    "bar3h",
    "barycentricToCartesian",
    "bctree",
    "bench",
    "between",
    "bfsearch",
    "bicgstabl",
    "biconncomp",
    "binary",
    "binscatter",
    "bitnot",
    "boundary",
    "boundaryFacets",
    "boundingbox",
    "brush",
    "builddocsearchdb",
    "bvp4c",
    "bvp5c",
    "bvpget",
    "bvpinit",
    "bvpset",
    "bvpxtend",
    "caldays",
    "caldiff",
    "calendarDuration",
    "calllib",
    "callSoapService",
    "calmonths",
    "calquarters",
    "calweeks",
    "calyears",
    "camdolly",
    "cameratoolbar",
    "campan",
    "camproj",
    "cartesianToBarycentric",
    "cartToBary",
    "categorical",
    "categories",
    "cdf2rdf",
    "cdfepoch",
    "cdfinfo",
    "cdflib",
    "cdfread",
    "cdfwrite",
    "cell2table",
    "cellplot",
    "centrality",
    "centroid",
    "checkcode",
    "checkin",
    "checkout",
    "circumcenter",
    "circumcenters",
    "classUnderlying",
    "clearAllMemoizedCaches",
    "clearCache",
    "clearpoints",
    "clipboard",
    "clone",
    "cmopts",
    "collapse",
    "colordef",
    "colormapeditor",
    "compose",
    "condensation",
    "coneplot",
    "conncomp",
    "contains",
    "contourslice",
    "convertCharsToStrings",
    "convertStringsToChars",
    "convexHull",
    "copyHDU",
    "count",
    "countcats",
    "countEachLabel",
    "createClassFromWsdl",
    "createFile",
    "createImg",
    "createSoapMessage",
    "createTbl",
    "criticalAlpha",
    "customverctrl",
    "daqread",
    "datacursormode",
    "datastore",
    "datatipinfo",
    "dateshift",
    "datetime",
    "day",
    "days",
    "dbmex",
    "dde23",
    "ddeget",
    "ddensd",
    "ddesd",
    "ddeset",
    "decomposition",
    "degree",
    "delaunayTriangulation",
    "deleteCol",
    "deleteFile",
    "deleteHDU",
    "deleteKey",
    "deleteproperty",
    "deleteRecord",
    "deleteRows",
    "delevent",
    "DelimitedTextImportOptions",
    "delsample",
    "delsamplefromcollection",
    "depdir",
    "depfun",
    "details",
    "detectImportOptions",
    "deval",
    "dfsearch",
    "digraph",
    "discretize",
    "dissect",
    "distances",
    "dither",
    "docsearch",
    "dragrect",
    "duration",
    "dynamicprops",
    "echodemo",
    "edgeAttachments",
    "edges",
    "empty",
    "enableservice",
    "enumeration",
    "eraseBetween",
    "eventlisteners",
    "events",
    "exceltime",
    "Execute",
    "export2wsdlg",
    "exportsetupdlg",
    "extractAfter",
    "extractBefore",
    "extractBetween",
    "faceNormal",
    "faceNormals",
    "fcontour",
    "featureEdges",
    "Feval",
    "fewerbins",
    "figurepalette",
    "FileDatastore",
    "filemarker",
    "fileMode",
    "fileName",
    "fill3",
    "fillmissing",
    "filloutliers",
    "fimplicit",
    "fimplicit3",
    "findedge",
    "findgroups",
    "findnode",
    "findprop",
    "fitsdisp",
    "fitsinfo",
    "fitsread",
    "fitswrite",
    "FixedWidthImportOptions",
    "flipedge",
    "flow",
    "fmesh",
    "fplot3",
    "freeBoundary",
    "freqspace",
    "fsurf",
    "FunctionTestCase",
    "functiontests",
    "funm",
    "gather",
    "gcmr",
    "geobubble",
    "geolimits",
    "getabstime",
    "getAColParms",
    "getaudiodata",
    "getBColParms",
    "GetCharArray",
    "getColName",
    "getColType",
    "getConstantValue",
    "getdatasamples",
    "getdatasamplesize",
    "getEqColType",
    "getFileFormats",
    "GetFullMatrix",
    "getHdrSpace",
    "getHDUnum",
    "getHDUtype",
    "getImgSize",
    "getImgType",
    "getinterpmethod",
    "getnext",
    "getNumCols",
    "getNumHDUs",
    "getNumInputs",
    "getNumOutputs",
    "getNumRows",
    "getOpenFiles",
    "getpoints",
    "getProfiles",
    "getqualitydesc",
    "getReport",
    "getsamples",
    "getsampleusingtime",
    "gettimeseriesnames",
    "gettsafteratevent",
    "gettsafterevent",
    "gettsatevent",
    "gettsbeforeatevent",
    "gettsbeforeevent",
    "gettsbetweenevents",
    "GetVariable",
    "getvaropts",
    "getVersion",
    "GetWorkspaceData",
    "gobjects",
    "graph",
    "GraphPlot",
    "graymon",
    "griddedInterpolant",
    "guide",
    "h5create",
    "h5disp",
    "h5info",
    "h5read",
    "h5readatt",
    "h5write",
    "h5writeatt",
    "handle",
    "hasdata",
    "hasFrame",
    "hasnext",
    "hdf5info",
    "hdf5read",
    "hdf5write",
    "hdfan",
    "hdfdf24",
    "hdfdfr8",
    "hdfh",
    "hdfhd",
    "hdfhe",
    "hdfhx",
    "hdfinfo",
    "hdfml",
    "hdfpt",
    "hdfread",
    "hdftool",
    "hdfv",
    "hdfvf",
    "hdfvh",
    "hdfvs",
    "head",
    "heatmap",
    "height",
    "helpbrowser",
    "helpdesk",
    "helpwin",
    "hgexport",
    "hgsetget",
    "highlight",
    "histcounts",
    "histcounts2",
    "histogram",
    "histogram2",
    "hms",
    "holes",
    "hour",
    "hours",
    "idealfilter",
    "im2java",
    "ImageDatastore",
    "imapprox",
    "imgCompress",
    "import",
    "imresize",
    "incenter",
    "incenters",
    "incidence",
    "indegree",
    "inmem",
    "innerjoin",
    "inOutStatus",
    "insertAfter",
    "insertATbl",
    "insertBefore",
    "insertBTbl",
    "insertCol",
    "insertImg",
    "insertRows",
    "inShape",
    "inspect",
    "instrcallback",
    "instrfind",
    "instrfindall",
    "interfaces",
    "interp1q",
    "interpstreamspeed",
    "invoke",
    "isaUnderlying",
    "isbetween",
    "iscalendarduration",
    "iscategorical",
    "iscategory",
    "ischange",
    "iscom",
    "isCompressedImg",
    "isConnected",
    "isdag",
    "isdatetime",
    "isdst",
    "isduration",
    "isEdge",
    "isenum",
    "isevent",
    "ishole",
    "isIllConditioned",
    "isinterface",
    "isinterior",
    "isInterior",
    "isisomorphic",
    "islocalmax",
    "islocalmin",
    "isLocked",
    "ismembertol",
    "ismissing",
    "isnat",
    "isomorphism",
    "isordinal",
    "isoutlier",
    "isprotected",
    "isregular",
    "issimplified",
    "issortedrows",
    "isStringScalar",
    "istable",
    "istall",
    "istimetable",
    "isundefined",
    "isvalid",
    "isweekend",
    "javaMethodEDT",
    "javaObjectEDT",
    "join",
    "juliandate",
    "labeledge",
    "labelnode",
    "lag",
    "laplacian",
    "last",
    "layout",
    "ldl",
    "libfunctions",
    "libfunctionsview",
    "libisloaded",
    "libpointer",
    "libstruct",
    "linkdata",
    "loadlibrary",
    "lsqminnorm",
    "lsqr",
    "makehgtform",
    "mapreduce",
    "mapreducer",
    "matfile",
    "maxflow",
    "MaximizeCommandWindow",
    "maxk",
    "maxNumCompThreads",
    "memmapfile",
    "memoize",
    "MemoizedFunction",
    "mergecats",
    "meta.abstractDetails",
    "meta.DynamicProperty",
    "meta.EnumeratedValue",
    "meta.MetaData",
    "methodsview",
    "MException",
    "milliseconds",
    "MinimizeCommandWindow",
    "mink",
    "minres",
    "minspantree",
    "minute",
    "minutes",
    "missing",
    "mlint",
    "mlintrpt",
    "mmfileinfo",
    "month",
    "morebins",
    "movAbsHDU",
    "move",
    "movie2avi",
    "movNamHDU",
    "movRelHDU",
    "mput",
    "multibandread",
    "multibandwrite",
    "NaT",
    "nccreate",
    "ncdisp",
    "ncinfo",
    "ncread",
    "ncreadatt",
    "ncwrite",
    "ncwriteatt",
    "ncwriteschema",
    "nearest",
    "nearestNeighbor",
    "neighbors",
    "netcdf",
    "noanimate",
    "notebook",
    "notify",
    "nsidedpoly",
    "num2ruler",
    "numArgumentsFromSubscript",
    "numboundaries",
    "numedges",
    "numnodes",
    "numpartitions",
    "numRegions",
    "numsides",
    "ode113",
    "ode23t",
    "ode23tb",
    "odextend",
    "openFile",
    "opengl",
    "outdegree",
    "outerjoin",
    "pad",
    "pagesetupdlg",
    "parse",
    "parseSoapResponse",
    "partition",
    "parula",
    "path2rc",
    "pathtool",
    "pcode",
    "pdepe",
    "pdeval",
    "perimeter",
    "plotbrowser",
    "plotedit",
    "plottools",
    "pointLocation",
    "polaraxes",
    "polarhistogram",
    "polarplot",
    "polarscatter",
    "polybuffer",
    "polyshape",
    "posixtime",
    "predecessors",
    "preview",
    "printdlg",
    "printopt",
    "printpreview",
    "profsave",
    "propedit",
    "propertyeditor",
    "PutCharArray",
    "PutFullMatrix",
    "PutWorkspaceData",
    "pyargs",
    "pyversion",
    "quarter",
    "Quit",
    "RandStream",
    "rbbox",
    "readall",
    "readasync",
    "readATblHdr",
    "readBTblHdr",
    "readCard",
    "readCol",
    "readFrame",
    "readimage",
    "readImg",
    "readKey",
    "readKeyCmplx",
    "readKeyDbl",
    "readKeyLongLong",
    "readKeyLongStr",
    "readKeyUnit",
    "readRecord",
    "readtable",
    "recordblocking",
    "regions",
    "registerevent",
    "regmatlabserver",
    "release",
    "Remove",
    "RemoveAll",
    "removecats",
    "removets",
    "renamecats",
    "reordercats",
    "reordernodes",
    "replace",
    "replaceBetween",
    "resample",
    "retime",
    "reverse",
    "rlim",
    "rmboundary",
    "rmedge",
    "rmholes",
    "rmmissing",
    "rmnode",
    "rmslivers",
    "rowfun",
    "rtickangle",
    "rtickformat",
    "rticklabels",
    "ruler2num",
    "runperf",
    "scale",
    "scatteredInterpolant",
    "scroll",
    "second",
    "seconds",
    "selectmoveresize",
    "sendmail",
    "serial",
    "serialbreak",
    "seriallist",
    "setabstime",
    "setBscale",
    "setcats",
    "setCompressionType",
    "setHCompScale",
    "setHCompSmooth",
    "setinterpmethod",
    "setpixelposition",
    "setTileDim",
    "settimeseriesnames",
    "setTscale",
    "setuniformtime",
    "setvaropts",
    "setvartype",
    "sheetnames",
    "shortestpath",
    "shortestpathtree",
    "showplottool",
    "shuffle",
    "simplify",
    "smoothdata",
    "snapnow",
    "sortboundaries",
    "sortregions",
    "sortx",
    "sorty",
    "split",
    "splitapply",
    "splitEachLabel",
    "splitlines",
    "SpreadsheetDatastore",
    "SpreadsheetImportOptions",
    "ss2tf",
    "stack",
    "standardizeMissing",
    "stats",
    "step",
    "stopasync",
    "str2mat",
    "streamparticles",
    "streamslice",
    "string",
    "strings",
    "strip",
    "strlength",
    "struct2table",
    "subgraph",
    "subtract",
    "subvolume",
    "successors",
    "summary",
    "superclasses",
    "support",
    "supportPackageInstaller",
    "surf2patch",
    "surfaceArea",
    "symmlq",
    "synchronize",
    "syntax",
    "table",
    "table2array",
    "table2cell",
    "table2struct",
    "table2timetable",
    "TabularTextDatastore",
    "tail",
    "tall",
    "TallDatastore",
    "tallrng",
    "targetupdater",
    "tcpclient",
    "Test",
    "TestResult",
    "testsuite",
    "texlabel",
    "textwrap",
    "tfqmr",
    "thetalim",
    "thetatickformat",
    "thetaticklabels",
    "throw",
    "throwAsCaller",
    "Tiff",
    "timeit",
    "timeofday",
    "timer",
    "timerange",
    "timeseries",
    "timetable",
    "timetable2table",
    "timezones",
    "todatenum",
    "toolboxdir",
    "topkrows",
    "toposort",
    "transclosure",
    "translate",
    "transreduction",
    "triangulation",
    "TriRep",
    "TriScatteredInterp",
    "tscollection",
    "tzoffset",
    "uialert",
    "uiaxes",
    "uibutton",
    "uicheckbox",
    "uiconfirm",
    "uidropdown",
    "uieditfield",
    "uifigure",
    "uigauge",
    "uigetpref",
    "uiimport",
    "uiknob",
    "uilabel",
    "uilamp",
    "uilistbox",
    "uiopen",
    "uiradiobutton",
    "uisave",
    "uisetcolor",
    "uisetpref",
    "uislider",
    "uispinner",
    "uistack",
    "uiswitch",
    "uitab",
    "uitabgroup",
    "uitextarea",
    "uitogglebutton",
    "uitree",
    "uitreenode",
    "undocheckout",
    "uniquetol",
    "unloadlibrary",
    "unmesh",
    "unregisterallevents",
    "unregisterevent",
    "unstack",
    "upgradePreviouslyInstalledSupportPackages",
    "userpath",
    "ValueIterator",
    "varfun",
    "vartype",
    "verctrl",
    "vertexAttachments",
    "vertexNormal",
    "VideoReader",
    "VideoWriter",
    "viewmtx",
    "visdiff",
    "volume",
    "volumebounds",
    "voronoiDiagram",
    "websave",
    "week",
    "whatsnew",
    "width",
    "winopen",
    "withtol",
    "wordcloud",
    "write",
    "writeChecksum",
    "writeCol",
    "writeComment",
    "writeDate",
    "writeHistory",
    "writeImg",
    "writeKey",
    "writeKeyUnit",
    "writetable",
    "writeVideo",
    "xmlread",
    "xmlwrite",
    "xslt",
    "xtickformat",
    "year",
    "years",
    "ymd",
    "ytickformat",
    "yyaxis",
    "yyyymmdd",
    "ztickformat"    
  ]

  return {
    name: 'Octave',
    keywords: {
      keyword:
        '__FILE__ __LINE__ arguments break case catch classdef continue do else elseif end ' +
        'end_try_catch|10 end_unwind_protect|10 endclassdef|10 endenumeration endevents endfor|10 endfunction|10 ' +
        'endif|10 endmethods|10 endparfor|10 endproperties|10 endswitch|10 endwhile|10 ' +
        'enumeration events for function global if methods otherwise parfor persistent properties ' +
        'return switch try until unwind_protect|10 unwind_protect_cleanup|10 while',
      built_in:
        'size length ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril ' +
        'triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute repmat ' +
        'shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf Inf nan NaN' +
        'struct cell ' +
        'feature help doc exit quit ' +
        'sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan ' +
        'atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot ' +
        'cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog ' +
        'realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal ' +
        'cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli ' +
        'besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma ' +
        'gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms ' +
        'nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones ' +
        'eye rand randn linspace logspace freqspace meshgrid accumarray ' +
        'isnan isinf isfinite j why ' + 
        'compan gallery hadamard hankel hilb invhilb magic pascal ' +
        'rosser toeplitz vander wilkinson max min nanmax nanmin mean nanmean type table ' +
        'readtable writetable sortrows sort figure plot plot3 scatter scatter3 cellfun ' +
        'legend intersect ismember procrustes hold num2cell ',
      missing:
        MISSING_FUNCTIONS_LIST.join(' ')
    },
    illegal: '(//|/\\*|\\s+/\\w+)',
    contains: [
      {
        className: 'function',
        beginKeywords: 'function', end: '$',
        contains: [
          hljs.UNDERSCORE_TITLE_MODE,
          {
            className: 'params',
            variants: [
              {begin: '\\(', end: '\\)'},
              {begin: '\\[', end: '\\]'}
            ]
          }
        ]
      },
      {
        className: 'built_in',
        begin: /true|false/,
        relevance: 0,
        starts: TRANSPOSE
      },
      {
        begin: '[a-zA-Z][a-zA-Z_0-9]*' + TRANSPOSE_RE,
        relevance: 0
      },
      {
        className: 'number',
        begin: hljs.C_NUMBER_RE,
        relevance: 0,
        starts: TRANSPOSE
      },
      {
        className: 'string',
        begin: '\'', end: '\'',
        contains: [
          hljs.BACKSLASH_ESCAPE,
          {begin: '\'\''}]
      },
      {
        begin: /\]|}|\)/,
        relevance: 0,
        starts: TRANSPOSE
      },
      {
        className: 'string',
        begin: '"', end: '"',
        contains: [
          hljs.BACKSLASH_ESCAPE,
          {begin: '""'}
        ],
        starts: TRANSPOSE
      },
      hljs.COMMENT('^\\s*\\%\\{\\s*$', '^\\s*\\%\\}\\s*$'),
      hljs.COMMENT('^\\s*\\#\\{\\s*$', '^\\s*\\#\\}\\s*$'),
      hljs.COMMENT('\\%', '$'),
      hljs.COMMENT('\\#', '$')
    ]
  };
}
